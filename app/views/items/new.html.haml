// jquery: add_item_form.js
:css
  .step ul.select-filter-video li a{-moz-border-radius-bottomleft:9px;-moz-border-radius-bottomright:9px;-moz-border-radius-topleft:9px;-moz-border-radius-topright:9px;display:block;padding-bottom:2px;padding-top:2px;text-align:center;width:60px;}
  .step #image_search_results{height:200px;position:relative;width:530px;}
  .step .tabbed_video{margin:0;overflow:auto;}
  #custom_video{display:none;height:180px;padding:10px;position:relative;text-align:left;width:510px;}
  .step .tabbed_video{margin:0;overflow:auto;}
  .step #load_more_videos{background-color:#BDCEE5;border-top:2px solid #BBBBBB;bottom:0;display:block;font-size:20px;position:relative;text-align:center;text-decoration:none;width:530px;}
  .step #primary_video_display{float:right;height:auto;text-align:center;width:180px;}
  .step ul.select-filter-video li a.selected, .step ul.select-filter-video li a:hover{-moz-background-clip:border;-moz-background-inline-policy:continuous;-moz-background-origin:padding;background:#333333 none repeat scroll 0 0;color:white;text-decoration:none;}
  .step #video_search_results{height:200px;position:relative;width:530px;}

#form-header.form-header
  = image_tag 'app/logo_popups.png'
  %span
    New item
  %br.clear
#centered_forms
  - form_for @item do |f|
    
    .step#name
      .row
        .field
          = f.label :name, "Item Name"
          %span.red *
        = f.text_field :name, :value => @item.name || params[:query]  , :class =>'required', :title => "Please include the name of the item."
        .extra
          Please be as specific as possible 
          %span
            e.g. Apple iPhone 4
      .row
        .field.select
          = f.label :parent_category, 'Item Type'
          %span.red *
          %a.tip{:title => 'This ensures correct categorization of the item so richer content can be gathered from the web and duplicate items can be prevented.'}Why?
        = f.select 'root_category', [''] + ItemCategory.roots.map{|c| [c.name, c.id]}, {}, {:class => 'type_select required', :title => "Please select the type of item this is."}

      #sub_categories_header.row{:style => 'display: none;'}
        .field
          = f.label :category, 'Type of music item'
          = f.hidden_field :category_id
        #sub_categories
        .clearfix

      .row
        .field.tags
          = f.label :tags
          %span.format-info
            Please separate with commas
          .clear
        = text_field_tag :tags_string, '', :size => 30
        .extra
          Adding tags helps connect similar items
          %span
            e.g. Apple, Smartphone, Electronic

      .row
        .field
          = f.label :url, 'Website'
        = f.text_field :url, :value => @link, :class => "url"
        .extra
          Adding a URL provides link to more info
          %span
            e.g. www.apple.com
      .row
        .field.twitter
          = f.label :twitter_query, "Twitter keywords"
          %a.tip{:title => 'We use twitter to gauge the amount of hype on an item. By entering keywords users can see how \'hot\' or \'cold\' the talk is right now on a particular item.'} Huh?
          %span.format-info
            Please separate with 'OR'
          .clear
        = f.text_field :twitter_query, :value => @item.twitter_query || params[:query]
        .extra
          Twitter query to pull mentions of item
          %span
            e.g. Apple iPhone 4 OR #iPhone4
      .row
        .field.facebook
          = f.label :facebook_query, "Facebook keywords"
          %a.tip{:title => 'We use facebook to gauge the amount of hype on an item. By entering keywords users can see how \'hot\' or \'cold\' the talk is right now on a particular item.'} Huh?
          %span.format-info
            Please separate with a space
          .clear
        = f.text_field :facebook_query, :value => @item.facebook_query || params[:query]
        .extra
          Facebook query to pull mentions of item
          %span
            e.g. Apple iPhone 4 Smartphone
            

      .clear 
    
    .step#description{:style => 'display: none;'}
      .box#first_box
        %h1 Select Match
        #suggestions
          %h2 
            Recommended
            %a.tip{:title => 'In order to ensure we are able to gather the fullest amount of data for an item we use a recommended source for our data retrieval. Thanks for your understanding and cooperation!'}why?
          #primary_source
          
          %h3 Other Matches
          #secondary_source


          .edit_keyword
            %a#edit_keyword_link.qtip{:title => 'If no results or if not accurate select here and enter a different search form', :rel => 'bottomMiddle-topLeft'}
              Edit Keyword Search
            %a#close_keyword.keywords_form{:style => 'display: none'}
              Close
        #keyword_form.keywords_form{:style => 'display: none'}
          %span
            For better results try a new item name
          =text_field_tag 'new_keyword'
          %a#search_new_keyword
            Search
              
        
      .box.added#additional_data_fields{:style=> 'display: none;'}
      .box.second
        %h1#desc
          Description
          %span
            Edit or if none add own.
        = f.text_area :short_description, :rows => 5

        = f.hidden_field :source_id
        = f.hidden_field :artist_name
        = hidden_field_tag :source_name
        / this is just for google image search
        = hidden_field_tag :release_year
        = hidden_field_tag :prev_type
      .clear
          
    .step.clearfix#image_selection{:style => 'display: none;'}
      
      .box#image_box
        %h1 
          Select images
          %span 
            Select the primary image twice and for any additional images once.
        %ul.select-filter
          %li
            %a.selected{:rel => 'image_search_results'}
              Web
          %li
            %a{:rel => 'custom_image'}
              URL
        
        #image_search_results.tabbed
        
        #custom_image.tabbed
          %label{:for => 'new_image_url'} Enter URL here  
          = text_field_tag :new_image_url, nil, {:size => 40, :class => 'label_example'}
          = link_to(image_tag('/images/app/add_url.png'), 'javascript:;', :id => 'add_from_url')
          %br.clear
          %p{:style => 'border-bottom: 1px solid #ccc'} 
            Add as many images as you like 
            %span.hint Once added follow the directions from above.
          %p.error{:style => 'display:none'} 
            Url should look like url.
          #image_url_displays
         
        %a#load_more_images{:href => '#'} Load More

        = hidden_field_tag :primary_image
        = text_field_tag 'keyword', @keyword, :type => :hidden

      #primary_image_display
        = image_tag(@item.item_image, :class => 'current_image')
        %p Primary Image
      %br/
      #secondary_images_display
        
    //.add_submit for jquery
    .step.submit_step#video_selection{:style => 'display: none;'}
      
      .box#video_box{:style=>"border:2px solid #BDCEE5;position:relative;margin-bottom:10px;"}
        %h1 
          Select images
          %span 
            Select the primary image twice and for any additional images once.
        %ul.select-filter-video{:style=>"list-style-image:none;list-style-position:outside;list-style-type:none;width:250px;"}
          %li{:style=>"float:left;margin:10px 20px;padding-top:0;"}
            %a.selected{:rel => 'video_search_results'}
              Web
          %li{:style=>"float:left;margin:10px 20px;padding-top:0;"}
            %a{:rel => 'custom_video'}
              URL
        
        #video_search_results.tabbed_video
          
        #custom_video.tabbed_video
          %label{:for => 'new_image_url'} Enter URL here  
          = text_field_tag :new_image_url, nil, {:size => 40, :class => 'label_example'}
          = link_to(image_tag('/images/app/add_url.png'), 'javascript:;', :id => 'add_from_url')
          %br.clear
          %p{:style => 'border-bottom: 1px solid #ccc'} 
            Add as many images as you like 
            %span.hint Once added follow the directions from above.
          %p.error{:style => 'display:none'} 
            Url should look like url.
          #image_url_displays
         
        %a#load_more_videos{} Load More

        = hidden_field_tag :primary_image
        = text_field_tag 'keyword', @keyword, :type => :hidden

      #primary_video_display
        = image_tag(@item.item_image, :class => 'current_image')
        %p Primary Image
      %br/
      #secondary_images_display
        
    //.add_submit for jquery 
    .buttons.clear
      %span.red.only_first_step
        *Required 
      #next_button_div
        = submit_tag '', :name => nil, :id => "next-button"

      #submit_wait_image{:style => "float:right; width:20px; margin-right: 15px;"}
        = image_tag 'wait.gif', :class => 'wait', :style => "display:none"            
      #back_button
        = submit_tag 'Back', :type => 'reset'
      #cancel.only_first_step
        Cancel
         
      %br.clear/  
    
  #hype-it.clearfix{:style => 'display: none;'}
    =image_tag(@item.item_image, :width=>"100px", :class => 'current_image')
    %h2{:style => 'margin-left: 10px; margin-bottom: 5px;'} Be the first to Hype this item!
    %span
      Only Hype items you own or have direct experience with.
    .two-options-holder

= javascript_include_tag "help.js"
:javascript
  $('#tags_string').autocomplete('/searches/tags', {
    mustMatch : false,
    cacheLength: 1,
    minChars: 3,
    max: 15,
    scroll: false,
    selectFirst: false,
    multiple: true,
    multipleSeparator: ", ", 
    autoFill: false
  });
