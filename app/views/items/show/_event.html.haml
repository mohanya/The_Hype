-@start, @end = @item.correct_times
%input{:type => 'hidden', :value => "#{@item.venue_name} #{@item.address} #{h(@item.city)}, #{h(@item.state)} #{h(@item.zip)}" , :id => 'item_address'}
%input{:type => 'hidden', :value => "<B>#{@item.name}</B><BR /><B>Venue Name: </B> #{@item.venue_name}<BR /><B>Starts:</B> #{@start} <BR /><B>Ends: </B>#{@end}<BR />", :id => 'item_name'}

.hypes.tab#details 
  %ul#map_images-select
    %li
      %a.option.selected#images{:href => ':javascript;', :onclick => 'return false;'} Images
    %li
      %a.option#map{:href => ':javascript', :onclick => 'return false;'} Map
  #map_canvas{:style => 'display: none'}
  = render :partial => 'items/show/shared/images_display'
  - cache(:key => @item.id.to_s + '_details') do
    .desc_holder
      = render :partial => 'items/show/shared/description'
      - if @item.source_name    
        %p.item-source
          = link_to 'source: ' + @item.source_name.to_s, @item.source_url
      - if !@item.url.blank?
        %div.info_box
          %strong Website &nbsp;
          %a{:href => full_url(@item.url)}= @item.url
      %div.info_box
        %strong When
        %p.no_margin
          = @start if @start
          -if @end && !@end.blank?
            until 
            = @end
    
    
      %div.info_box
        %strong Where
        %p.no_margin
          = h @item.venue_name
        %p.no_margin
        = h @item.address
        %p.no_margin
          = @item.city + ', ' unless @item.city.blank?
          = "#{h(@item.state)} #{h(@item.zip)}"
      
      
      - unless @item.ticket_price.blank?
        %div.info_box
          %strong Tickets
          %p.no_margin
            = @item.ticket_price
          %p.no_margin
            = @item.ticket_url
      

  %h1.clear{:style=>"padding-top:40px;"}
    Similar Items
    = render(:partial => 'items/select_similar', :locals => {:target => 'similar_items'})
  .all-items.clear
    = render :partial => 'items/item_hash'

:javascript
  var map = new GMap2(document.getElementById("map_canvas"));
  map.setUIToDefault();
  var geocoder = new GClientGeocoder();
  show_item_location($('#item_address').val(), $('#item_name').val());

      function show_item_location(address,name) {
        geocoder.getLatLng(
          address,
          function(point) {
            if (!point) {
              // not sure what kind of error processing we want to do if the address can't be found.
            } else {
              map.setCenter(point, 13);
              var marker = new GMarker(point);
              map.addOverlay(marker);
              marker.openInfoWindowHtml(name);
            }
          }
        );
      }
